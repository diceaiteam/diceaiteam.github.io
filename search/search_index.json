{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Team Docs This documentation tool is created so that the co-operation can be more efficient, and the knowledge can be preserved and re-used. We can keep track of all our works here in a centralized place, and link contents to different places such as team drive, google docs etc. Can be deployed on our own server and managed through git. Basics MarkDown is used to edit the pages. To facilitate the colaboration on coding, the overall frameworks and a set of interfaces should be defined on the initiation. Each part in one project page should be kept as reusable as possible to be referrable in other projects. Commands mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs -h - Print help message and exit. See MkDocs for more commands. Project layout For different projects, please see Projects for its own details. mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. projects/sample_project.md # The page is about the projects finished or ongoing projects/gpuserver.md # The page is about the projects finished or ongoing projects/writingdocs.md","title":"Home"},{"location":"#team-docs","text":"This documentation tool is created so that the co-operation can be more efficient, and the knowledge can be preserved and re-used. We can keep track of all our works here in a centralized place, and link contents to different places such as team drive, google docs etc. Can be deployed on our own server and managed through git.","title":"Team Docs"},{"location":"#basics","text":"MarkDown is used to edit the pages. To facilitate the colaboration on coding, the overall frameworks and a set of interfaces should be defined on the initiation. Each part in one project page should be kept as reusable as possible to be referrable in other projects.","title":"Basics"},{"location":"#commands","text":"mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs -h - Print help message and exit. See MkDocs for more commands.","title":"Commands"},{"location":"#project-layout","text":"For different projects, please see Projects for its own details. mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. projects/sample_project.md # The page is about the projects finished or ongoing projects/gpuserver.md # The page is about the projects finished or ongoing projects/writingdocs.md","title":"Project layout"},{"location":"projects/gpuserver/","text":"GPU Server Usage This page gives brief instruction on how we use remote computation resources when colab is not enough. Vast.ai Vast.ai is a popular gpu renting platform which provides capable gpu servers. The usage is very straghtforward and it provides detailed documentation. Usage log into the console Select instance and rent To run the code in Jupyter terminal, start the terminal from Instances page To use big datasets and large models in vastai, we can upload them first to the google drive and download them from vastai commandlines, as compared to local uploading, downloading from gdrive is much faster. For more detailed use, check their documents","title":"GPU Server Usage"},{"location":"projects/gpuserver/#gpu-server-usage","text":"This page gives brief instruction on how we use remote computation resources when colab is not enough.","title":"GPU Server Usage"},{"location":"projects/gpuserver/#vastai","text":"Vast.ai is a popular gpu renting platform which provides capable gpu servers. The usage is very straghtforward and it provides detailed documentation.","title":"Vast.ai"},{"location":"projects/gpuserver/#usage","text":"log into the console Select instance and rent To run the code in Jupyter terminal, start the terminal from Instances page To use big datasets and large models in vastai, we can upload them first to the google drive and download them from vastai commandlines, as compared to local uploading, downloading from gdrive is much faster. For more detailed use, check their documents","title":"Usage"},{"location":"projects/sample_project/","text":"Project:Hate Speech Detection In this project we do a hate speech detection task. Project Members:... Date: 01/01/2023 Datasets Describe Datasets Used. Dataset Name Class number data1 1000 data2 2000 Code Interface Data Preprocessing def load_data(source, **params): data = read_from(source) return data def preprocess_data(data): return processed_data Evaluation Metrics def evaluate(model, data): pred = model(data) result = metric(pred) return result Code Repo The code is restored in github Colab Link We also have a colab version of the code in colab Useful References Papers here","title":"Sample Project"},{"location":"projects/sample_project/#projecthate-speech-detection","text":"In this project we do a hate speech detection task. Project Members:... Date: 01/01/2023","title":"Project:Hate Speech Detection"},{"location":"projects/sample_project/#datasets","text":"Describe Datasets Used. Dataset Name Class number data1 1000 data2 2000","title":"Datasets"},{"location":"projects/sample_project/#code-interface","text":"","title":"Code Interface"},{"location":"projects/sample_project/#data-preprocessing","text":"def load_data(source, **params): data = read_from(source) return data def preprocess_data(data): return processed_data","title":"Data Preprocessing"},{"location":"projects/sample_project/#evaluation-metrics","text":"def evaluate(model, data): pred = model(data) result = metric(pred) return result","title":"Evaluation Metrics"},{"location":"projects/sample_project/#code-repo","text":"The code is restored in github","title":"Code Repo"},{"location":"projects/sample_project/#colab-link","text":"We also have a colab version of the code in colab","title":"Colab Link"},{"location":"projects/sample_project/#useful-references","text":"Papers here","title":"Useful References"},{"location":"projects/writingdocs/","text":"Writing and publishing on our github pages doc A brief guide to building the documentation tool from github, writing and publishing on the github pages Cloning to local Cloning the source code repo from our github repo using git; In the local cloned project, edit the pages; Preview content in local server using mkdocs serve Synchronize source code remotely Commit Locally git add to add the changes to git git commit to commit to the local git Commit remotely Make sure local git has access to remote repo (a easy way would be to add collaborator); git push origin main pushes to origin's main branch. build the site and publish Use mkdocs build to build the documentation. The output dir can be specified with -d option; Make sure the built dir is in gh-pages branch which is the default branch of publishing page; Connect the build site with remote repo if not already done; Push with overwrite: git push -f origin gh-pages ; Check Actions of the github project and make sure the deployment is successful.","title":"Write the Doc"},{"location":"projects/writingdocs/#writing-and-publishing-on-our-github-pages-doc","text":"A brief guide to building the documentation tool from github, writing and publishing on the github pages","title":"Writing and publishing on our github pages doc"},{"location":"projects/writingdocs/#cloning-to-local","text":"Cloning the source code repo from our github repo using git; In the local cloned project, edit the pages; Preview content in local server using mkdocs serve","title":"Cloning to local"},{"location":"projects/writingdocs/#synchronize-source-code-remotely","text":"","title":"Synchronize source code remotely"},{"location":"projects/writingdocs/#commit-locally","text":"git add to add the changes to git git commit to commit to the local git","title":"Commit Locally"},{"location":"projects/writingdocs/#commit-remotely","text":"Make sure local git has access to remote repo (a easy way would be to add collaborator); git push origin main pushes to origin's main branch.","title":"Commit remotely"},{"location":"projects/writingdocs/#build-the-site-and-publish","text":"Use mkdocs build to build the documentation. The output dir can be specified with -d option; Make sure the built dir is in gh-pages branch which is the default branch of publishing page; Connect the build site with remote repo if not already done; Push with overwrite: git push -f origin gh-pages ; Check Actions of the github project and make sure the deployment is successful.","title":"build the site and publish"}]}